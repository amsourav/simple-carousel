{"version":3,"sources":["Utils/currencyFormatter.js","components/TagContainer/TagContainer.js","components/Tag/Tag.js","components/Card/Card.js","components/Carousel/Carousel.js","components/Search/Search.js","components/Spacer/Spacer.js","containers/Home/Home.js","Utils/dataFetcher.js","App.js","serviceWorker.js","index.js"],"names":["currencyFormatter","Intl","NumberFormat","style","currency","minimumFractionDigits","children","className","message","clearable","Card","main","image","title","price","tags","src","alt","map","tag","defaultProps","format","Math","ceil","random","Date","Carousel","props","scrollHandler","type","multplier","setState","state","cardSize","cards","length","finalPosition","coords","x","speed","max","min","y","this","transform","i","index","key","onClick","React","PureComponent","Search","handleChange","e","border","onChange","value","size","horizontal","spacerStyles","minHeight","minWidth","flex","Home","Promise","resolve","reject","Array","fill","then","Spacer","display","justifyContent","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.f9f257d6.chunk.js","sourcesContent":["export const currencyFormatter = new Intl.NumberFormat('en-IN', {\n    style: 'currency',\n    currency: 'INR',\n    minimumFractionDigits: 2\n  })\n  \n  ","import React from \"react\";\nimport \"./TagContainer.css\";\n\nexport default ({ children }) => {\n  return <div className=\"TagContainer\">{children}</div>;\n};\n","import React from \"react\";\nimport \"./Tag.css\";\n\nexport default ({ message, clearable = false }) => {\n  return (\n    <div className=\"Tag\">\n      <div className=\"TagText\">{message}</div>\n      {clearable && (\n        <div className=\"TagClear\">\n          <i className=\"fas fa-times\"></i>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./Card.css\";\n\nimport { currencyFormatter } from \"../../Utils/currencyFormatter\";\nimport TagContainer from \"../TagContainer/TagContainer\";\nimport Tag from \"../Tag/Tag\";\n\nconst Card = ({ main = false, image, title, price, tags = [] }) => (\n  <div className={`Card ${main && \"CardMain\"}`}>\n    <div className=\"ImageContainer\">\n      <img className=\"Image\" src={image} alt={title}></img>\n    </div>\n    <div className={\"ProductDetails\"}>\n      <div className=\"ProductDetails__Left\">\n        <div className={\"ProductTitle\"}>{title}</div>\n        <div className={\"ProductPrice\"}>{price}</div>\n      </div>\n      <div className=\"ProductDetails__Right\">\n        <TagContainer>\n          {tags.map(tag => (\n            <Tag message={tag} />\n          ))}\n        </TagContainer>\n      </div>\n    </div>\n  </div>\n);\n\nCard.defaultProps = {\n  main: false,\n  image: \"https://picsum.photos/400/300?blur=1\",\n  title: \"Offer\",\n  price: currencyFormatter.format(Math.ceil(Math.random(new Date()) * 1000)),\n  tags: [\"grocery\", \"50% off\"]\n};\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"../Card/Card\";\n\nimport \"./Carousel.css\";\n\nexport default class Carousel extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      speed: 1,\n      coords: {\n        x: 0,\n        y: 0\n      }\n    };\n  }\n\n  scrollHandler = type => {\n    let multplier = 1;\n\n    if (type === \"left\") {\n      multplier = 1;\n    } else {\n      multplier = -1;\n    }\n\n    this.setState(state => {\n      let cardSize = this.props.cards.length;\n      let finalPosition = state.coords.x + multplier * state.speed * 400;\n      if (finalPosition > 100 && type === \"left\") {\n        finalPosition = 0;\n      } else if (type === \"right\" && finalPosition <= -1 * (cardSize -3) * 400) {\n        finalPosition = -1 * (cardSize - 3) * 400;\n      }\n      return {\n        coords: {\n          ...state.coords,\n          x:\n            type === \"left\"\n              ? Math.max(0, finalPosition)\n              : Math.min(0, finalPosition)\n        }\n      };\n    });\n  };\n\n  render() {\n    const { coords } = this.state;\n    const { cards } = this.props;\n    return (\n      <div className={\"Carousel\"}>\n        <div className={\"Carousel__Scroll\"}>\n          <div\n            className={\"Carousel__InnerScroller\"}\n            style={{\n              transform: `translate(${coords.x}px, ${coords.y}px)`\n            }}\n          >\n            {cards.map((i, index) => (\n              <Card key={`card-${index}`} />\n            ))}\n          </div>\n        </div>\n        <div className=\"Carousel__NavContainer\">\n          <div\n            className=\"Carousel__Nav Carousel__NavLeft\"\n            onClick={() => this.scrollHandler(\"left\")}\n          >\n            <i className=\"Carousel__NavIcon fas fa-chevron-left\"></i>\n          </div>\n          <div\n            className=\"Carousel__Nav Carousel__NavRight\"\n            onClick={() => this.scrollHandler(\"right\")}\n          >\n            <i className=\"Carousel__NavIcon fas fa-chevron-right\"></i>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nCarousel.defaultProps = {\n  cards: []\n};\n","import React, { PureComponent } from \"react\";\nimport \"./Search.css\";\n\nexport default class Search extends PureComponent {\n  handleChange = e => {};\n  render() {\n    return (\n      <div className=\"SearchBox\">\n        <input\n          className=\"Input\"\n          style={{\n            border: \"none\"\n          }}\n          type=\"text\"\n          onChange={this.handleChange}\n        />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nfunction getUnit(value) {\n    if (typeof value === 'number') {\n      return 'px';\n    }\n    return '';\n  }\n\nexport default ({ size, horizontal }) => {\n    const spacerStyles = {\n      minHeight: !horizontal && size,\n      minWidth: horizontal && size,\n      flex: `0 0 ${size}${getUnit(size)}`,\n    };\n    return <div style={spacerStyles} />;\n  };","import React from \"react\";\nimport Carousel from \"../../components/Carousel/Carousel\";\nimport Search from \"../../components/Search/Search\";\nimport Spacer from \"../../components/Spacer/Spacer\";\nimport { dataFetcher } from \"../../Utils/dataFetcher\";\n\nexport default class Home extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cards: []\n    };\n  }\n\n  componentDidMount() {\n    dataFetcher().then(cards => {\n      this.setState({\n        cards\n      });\n    });\n  }\n\n  render() {\n    const { cards } = this.state;\n    return (\n      <div>\n        <Spacer size={20} />\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: \"space-around\",\n          }}\n        >\n          <Search />\n        </div>\n        <Spacer size={20} />\n        <Carousel cards={cards} />\n      </div>\n    );\n  }\n}\n","export const dataFetcher = () => {\n  return new Promise((resolve, reject) => {\n    resolve(new Array(6).fill(1));\n  });\n};\n","import React from 'react';\nimport './App.css';\nimport Home from './containers/Home/Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}